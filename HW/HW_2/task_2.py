"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).

Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены

Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7

Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""

def even_odd(num_1, even=0, odd=0):

    if num_1 == 0:
        return even, odd
    else:

        cur_n = num_1 % 10
        num_1 = num_1 // 10

        if cur_n % 2 == 0:
            even += 1
            return even_odd(num_1, even, odd)
        else:
            odd += 1
            return even_odd(num_1, even, odd)


num_1 = int(input("Введите натуральное число: "))
n1,n2 = even_odd(num_1)
print(f"Количество четных : {n1} нечетных : {n2}")
